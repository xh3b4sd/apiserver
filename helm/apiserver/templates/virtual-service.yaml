apiVersion: "networking.istio.io/v1beta1"
kind: "VirtualService"
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}"
spec:
  gateways:
    - "istio-system/ingressgateway"
  hosts:
    {{- if and ( .Values.cluster ) ( .Values.cluster.name ) ( .Values.cluster.zone ) }}
    # In a remote setup using eks the istio ingress gateway forwards traffic
    # based on wildcard expressions of a hosted zone. In our virtual service
    # here we define the specific subdomain of our micro service according to
    # the cluster name and DNS zone.
    #
    #     apiserver.kia02.aws.example.com
    #
    - "{{ .Release.Name }}.{{ .Values.cluster.name }}.{{ .Values.cluster.zone }}"
    {{- else }}
    # In a local setup using kind the istio ingress gateway forwards traffic
    # based on wildcard expressions matching everything. In our virtual service
    # here we do the same and just accept traffic for any host.
    - "*"
    {{- end }}
  http:
    - corsPolicy:
        allowCredentials: true
        allowHeaders:
          - grpc-timeout
          - content-type
          - keep-alive
          - user-agent
          - cache-control
          - content-type
          - content-transfer-encoding
          - custom-header-1
          - x-accept-content-transfer-encoding
          - x-accept-response-streaming
          - x-user-agent
          - x-grpc-web
        allowMethods:
          - POST
          - GET
          - OPTIONS
          - PUT
          - DELETE
        allowOrigins:
          - regex: ".*"
        exposeHeaders:
          - custom-header-1
          - grpc-status
          - grpc-message
        maxAge: 1728s
      route:
        - destination:
            host: "{{ .Release.Name }}"
            port:
              number: {{ .Values.port }}
